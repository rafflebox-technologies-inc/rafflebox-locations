"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
;
const ab = 'T';
const bc = 'V';
const mb = 'R';
const on = ['K', 'L', 'M', 'N', 'P'];
const nl = 'A';
const nb = 'E';
const ns = 'B';
const nt = 'X';
const nu = 'X';
const qc = ['G', 'H', 'J', 'K'];
const sk = 'S';
const yt = 'Y';
const pe = 'C';
const postalCodes = {
    'ab': ab,
    'bc': bc,
    'mb': mb,
    'nb': nb,
    'nl': nl,
    'ns': ns,
    'nt': nt,
    'nu': nu,
    'on': on,
    'qc': qc,
    'sk': sk,
    'yt': yt,
    'pe': pe,
    'alberta': ab,
    'british columbia': bc,
    'manitoba': mb,
    'new brunswick': nb,
    'newfoundland': nl,
    'nova scotia': ns,
    'northwest territories': nt,
    'nunavut': nu,
    'ontario': on,
    'quebec': qc,
    'saskatchewan': sk,
    'yukon': yt,
    'prince edward island': pe,
};
const caPostalCodes = (province, postal) => {
    const prefix = postalCodes[province.toLowerCase()];
    if (prefix) {
        if (typeof prefix === 'string') {
            return postal.toLowerCase().startsWith(prefix.toLowerCase());
        }
        if (typeof prefix === 'object') {
            let match = false;
            prefix.forEach((p) => {
                if (postal.toLowerCase().startsWith(p.toLowerCase())) {
                    match = true;
                }
            });
            return match;
        }
        return false;
    }
    return false;
};
exports.default = caPostalCodes;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2EtcG9zdGFsLWNvZGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NhLXBvc3RhbC1jb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVDLENBQUM7QUFFRixNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUM7QUFDZixNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUM7QUFDZixNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUM7QUFDZixNQUFNLEVBQUUsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztBQUNyQyxNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUM7QUFDZixNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUM7QUFDZixNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUM7QUFDZixNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUM7QUFDZixNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUM7QUFDZixNQUFNLEVBQUUsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQ2hDLE1BQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQztBQUNmLE1BQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQztBQUNmLE1BQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQztBQUVmLE1BQU0sV0FBVyxHQUFlO0lBQzlCLElBQUksRUFBRSxFQUFFO0lBQ1IsSUFBSSxFQUFFLEVBQUU7SUFDUixJQUFJLEVBQUUsRUFBRTtJQUNSLElBQUksRUFBRSxFQUFFO0lBQ1IsSUFBSSxFQUFFLEVBQUU7SUFDUixJQUFJLEVBQUUsRUFBRTtJQUNSLElBQUksRUFBRSxFQUFFO0lBQ1IsSUFBSSxFQUFFLEVBQUU7SUFDUixJQUFJLEVBQUUsRUFBRTtJQUNSLElBQUksRUFBRSxFQUFFO0lBQ1IsSUFBSSxFQUFFLEVBQUU7SUFDUixJQUFJLEVBQUUsRUFBRTtJQUNSLElBQUksRUFBRSxFQUFFO0lBQ1IsU0FBUyxFQUFFLEVBQUU7SUFDYixrQkFBa0IsRUFBRSxFQUFFO0lBQ3RCLFVBQVUsRUFBRSxFQUFFO0lBQ2QsZUFBZSxFQUFFLEVBQUU7SUFDbkIsY0FBYyxFQUFFLEVBQUU7SUFDbEIsYUFBYSxFQUFFLEVBQUU7SUFDakIsdUJBQXVCLEVBQUUsRUFBRTtJQUMzQixTQUFTLEVBQUUsRUFBRTtJQUNiLFNBQVMsRUFBRSxFQUFFO0lBQ2IsUUFBUSxFQUFFLEVBQUU7SUFDWixjQUFjLEVBQUUsRUFBRTtJQUNsQixPQUFPLEVBQUUsRUFBRTtJQUNYLHNCQUFzQixFQUFFLEVBQUU7Q0FDM0IsQ0FBQztBQUVGLE1BQU0sYUFBYSxHQUFHLENBQUMsUUFBZ0IsRUFBRSxNQUFjLEVBQVcsRUFBRTtJQUNsRSxNQUFNLE1BQU0sR0FBRyxXQUFXLENBQUMsUUFBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7SUFFbkQsSUFBSSxNQUFNLEVBQUU7UUFDVixJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsRUFBRTtZQUM5QixPQUFPLE1BQU0sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7U0FDOUQ7UUFFRCxJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsRUFBRTtZQUM5QixJQUFJLEtBQUssR0FBRyxLQUFLLENBQUM7WUFFbEIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQVMsRUFBRSxFQUFFO2dCQUMzQixJQUFJLE1BQU0sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDLEVBQUU7b0JBQ3BELEtBQUssR0FBRyxJQUFJLENBQUM7aUJBQ2Q7WUFDSCxDQUFDLENBQUMsQ0FBQztZQUVILE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFFRCxPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDLENBQUM7QUFFRixrQkFBZSxhQUFhLENBQUMifQ==